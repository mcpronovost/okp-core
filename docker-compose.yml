version: "3.3"

services:
  traefik:
    image: "traefik:v2.10"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"

  db:
    image: postgis/postgis:15-3.3
    volumes:
      - ./data_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  backend:
    build: backend/.
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - "./backend:/app"
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DJANGO_SETTINGS_MODULE=okp.settings_dev
      - STAGE=local
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"

  frontend:
    build: frontend/.
    command: sh -c "astro dev --host"
    volumes:
      - "./frontend:/app:rw"
    expose:
      - 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"

volumes:
  data_db:
  static:
