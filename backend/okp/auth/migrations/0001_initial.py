# Generated by Django 4.2.18 on 2025-01-30 19:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import okp.auth.models
import okp.core.fields
import okp.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OkpGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Name')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Is Visible')),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission', verbose_name='Permissions')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'ordering': ['name'],
            },
            managers=[
                ('objects', okp.auth.models.OkpGroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='OkpUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='Middle Name')),
                ('name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Public Name')),
                ('is_name_auto', models.BooleanField(default=True, verbose_name='Auto-Generate Name')),
                ('abbr', models.CharField(blank=True, max_length=4, verbose_name='Abbreviation')),
                ('is_abbr_auto', models.BooleanField(default=True, verbose_name='Auto-Generate Abbreviation')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='Slug')),
                ('is_slug_auto', models.BooleanField(default=True, verbose_name='Auto-Generate Slug')),
                ('avatar', okp.core.fields.OkpImageField(blank=True, null=True, upload_to='users/avatars', validators=[okp.core.validators.okpImageSizeValidator, django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Avatar')),
                ('cover', okp.core.fields.OkpImageField(blank=True, null=True, upload_to='users/covers', validators=[okp.core.validators.okpImageSizeValidator, django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Cover')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('groups', models.ManyToManyField(blank=True, related_name='users', to='okp_auth.okpgroup', verbose_name='Groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
